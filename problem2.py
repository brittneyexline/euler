#!/usr/local/bin/python

# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

MAX_TERM_VALUE = 4000000

fibonacci_cache = {}

def fibonacci (n):
	if (n < 1):
		return 0
	elif (n == 1):
		return 1
	elif (n == 2):
		return 2
	elif (n in fibonacci_cache):
		return fibonacci_cache[n]
	else:
		r = fibonacci(n-1) + fibonacci(n-2)
		fibonacci_cache[n] = r
		return r

sum = 0
index = 2
term = 0

while (term < MAX_TERM_VALUE):
	sum += term
	term = fibonacci(index)
	index += 3

print sum
	